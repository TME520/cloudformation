{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Create an Amazon EC2 instance running the Amazon Linux AMI.",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "ec2key",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "InstanceType": {
      "Description": "WebServer EC2 instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "Demons": {
        "Description": "The names of all the demons haunting this damned template.",
        "Type": "String",
        "Default": "Demon1:Choucroutard,Demon2:Bierprouton,Demon3:Raplaflan,Demon4:Rempiflard"
    },
    "ChosenDemon": {
        "Description": "Our best demon for this run",
        "Type": "String",
        "Default": ""
    },
    "LoserDemon": {
        "Description": "Our worst demon for this run",
        "Type": "String",
        "Default": ""
    },
    "DemonsGoingUp": {
        "Description": "Our best demons",
        "Type": "String",
        "Default": "Demon1: Choucroutard The Hero,Demon2:Bierprouton The Classy,Demon3:Raplaflan The Energetic,Demon4:Rempiflard The Beautiful"
    },
    "DemonsGoingDown": {
        "Description": "Our worst demons",
        "Type": "String",
        "Default": "Demon1: Choucroutard The Lazy,Demon2:Bierprouton The Stupid,Demon3:Raplaflan The Smelly,Demon4:Rempiflard The Ugly"
    },
    "StreamASGParams": {
        "Description": "AZ for Stream nodes 1 & 2 ASGs",
        "Type": "String",
        "Default": "StreamASG1AZ:ap-southeast-2a,StreamASG2AZ:ap-southeast-2b"
    }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t2.micro": {
        "Arch": "HVM64"
      }
    },
    "AWSInstanceType2NATArch": {
      "t2.micro": {
        "Arch": "NATHVM64"
      }
    },
    "AWSRegionArch2AMI": {
      "ap-southeast-2": {
        "PV64": "ami-63351d00",
        "HVM64": "ami-dc361ebf",
        "HVMG2": "ami-0ad2db69"
      }
    },
    "Demonsmap": {
        "DemonsGoingUp": {"Demon1": "0", "Demon2": "1", "Demon3": "2", "Demon4": "3"},
        "DemonsGoingDown": {"Demon1": "0", "Demon2": "1", "Demon3": "2", "Demon4": "3"}
    },
    "StreamASGParamsIndexMap": {
        "StreamASGParams": {
            "StreamASG1AZ": "0",
            "StreamASG2AZ": "1"
        }
    }
  },
  "Resources": {
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SecurityGroups": [
          {
            "Ref": "InstanceSecurityGroup"
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "Tags": [
          {
            "Key": "created_by",
            "Value": "TME520"
          },
          {
            "Key": "expiry",
            "Value": "never"
          },
          {
            "Key": "purpose",
            "Value": "Runs tests for self-training."
          },
          {
            "Key": "stack",
            "Value": { "Ref": "AWS::StackName" }
          }
        ]
      }
    },
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access via port 22",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          }
        ],
        "Tags": [
          {
            "Key" : "created_by",
            "Value" : "TME520"
          },
          {
            "Key" : "expiry",
            "Value" : "never"
          },
          {
            "Key" : "purpose",
            "Value" : "Runs tests for self-training."
          },
          {
            "Key": "stack",
            "Value": { "Ref": "AWS::StackName" }
          }
        ]
      }
    }
  },
  "Outputs": {
    "InstanceId": {
      "Description": "InstanceId of the newly created EC2 instance",
      "Value": {
        "Ref": "EC2Instance"
      }
    },
    "AZ": {
      "Description": "Availability Zone of the newly created EC2 instance",
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "AvailabilityZone"
        ]
      }
    },
    "PublicDNS": {
      "Description": "Public DNSName of the newly created EC2 instance",
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "PublicDnsName"
        ]
      }
    },
    "PublicIP": {
      "Description": "Public IP address of the newly created EC2 instance",
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "PublicIp"
        ]
      }
    },
    "SSHConnectionShellCommand": {
      "Description": "The command line you have to type in order to SSH into the EC2 instance (path to SSH key may vary).",
      "Value": {
        "Fn::Join": [ "", [ "", "ssh -v -i $HOME/.ssh/", { "Ref": "KeyName"}, ".pem ec2-user@", { "Fn::GetAtt": [ "EC2Instance", "PublicIp" ] } ] ]
      }
    },
    "DemonOfTheRun": {
      "Description": "Name of the best demon",
      "Value": {
        "Fn::Select": [
            1, {
                "Fn::Split": [
                    ":",
                    {
                        "Fn::Select": [
                            {
                                "Fn::FindInMap": [
                                    "Demonsmap",
                                    "DemonsGoingUp",
                                    {
                                        "Ref": "ChosenDemon"
                                    }
                                ]
                            },
                            {
                                "Fn::Split": [
                                    ",",
                                    {
                                        "Ref": "DemonsGoingUp"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
      }
    },
    "LoserOfTheRun": {
      "Description": "Name of the loser demon",
      "Value": {
        "Fn::Select": [
            1, {
                "Fn::Split": [
                    ":",
                    {
                        "Fn::Select": [
                            {
                                "Fn::FindInMap": [
                                    "Demonsmap",
                                    "DemonsGoingDown",
                                    {
                                        "Ref": "LoserDemon"
                                    }
                                ]
                            },
                            {
                                "Fn::Split": [
                                    ",",
                                    {
                                        "Ref": "DemonsGoingDown"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
      }
    },
    "StreamAZ1": {
        "Description": "AZ for Stream 1 type nodes",
        "Value": {
            "Fn::Select": [ 1, { "Fn::Split": [ ":", { "Fn::Select": [ {"Fn::FindInMap": [ "StreamASGParamsIndexMap", "StreamASGParams", "StreamASG1AZ" ] }, { "Fn::Split": [",", { "Ref": "StreamASGParams" } ] } ] } ] } ]
        }
    },
    "StreamAZ2": {
        "Description": "AZ for Stream 2 type nodes",
        "Value": {
            "Fn::Select": [ 1, { "Fn::Split": [ ":", { "Fn::Select": [ {"Fn::FindInMap": [ "StreamASGParamsIndexMap", "StreamASGParams", "StreamASG2AZ" ] }, { "Fn::Split": [",", { "Ref": "StreamASGParams" } ] } ] } ] } ]
        }
    }
  }
}
